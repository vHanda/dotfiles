#
# Functions
#

# Pastebin
function pb {
    URL=`pastebinit $@`
    echo $URL | c
    echo $URL
}

# Replace
function rp() {
    FROM=$1
    TO=$2
    echo "Replacing $1 for $2";
    find . -type f -not -path './node_modules/*' -not -path '*/\.*' -exec sed -i -e s/$FROM/$TO/g {} \;
}

# Focus Writer
function journal() {
    TIME=`date --iso-8601=seconds`
    FILE="$HOME/notes/Journal/$TIME.md"
    touch "$FILE"

    echo '---' >> $FILE
    echo 'type: Journal' >> $FILE
    echo "created: $TIME" >> $FILE
    echo '---' >> $FILE
    echo >> $FILE

    if which focuswriter &> /dev/null ; then
        focuswriter "$FILE"
    else
        /Applications/FocusWriter.app/Contents/MacOS/FocusWriter "$FILE"
    fi

    if python ~/src/notes/is_empty.py $FILE ; then
        rm "$FILE"
        return
    fi

    cd ~/notes/ &> /dev/null
    git add "$FILE"
    COMMIT_FILE=/tmp/journal-commit-msg
    echo 'New Journal Entry' > $COMMIT_FILE
    git commit -F $COMMIT_FILE
    rm $COMMIT_FILE
    cd - &> /dev/null
}

# For formatting numbers
function format() {
    sed ':a;s/\B[0-9]\{3\}\>/,&/;ta'
}

function mk() {
    mkdir -p "$1" && cd "$1"
}

# Go run
function gr() (
    COUNT=`ls -1 *.go 2>/dev/null | wc -l`
    if [[ $COUNT == 0 ]]; then
        if [ -d "cmd" ]; then
            cd "cmd/consumer"
        else
            echo "Could not find go files"
            return
        fi
    fi

    pwd
    EXE_NAME=`basename $PWD`

    time go build
    if [ $? -eq 0 ]; then
    else
        osascript -e "display notification \"Build Failed\" with title \"$EXE_NAME\""
        return
    fi
    ./"$EXE_NAME"
)

function getTestNames() {
    if [[ -z $@ ]]; then
        FILE_NAME=`fd '.*_test.dart' | fzf`
    else
        FILE_NAME=`fd '.*_test.dart' | fzf -1 -q $@`
    fi

    echo $FILE_NAME
}

function dt {
    TEST_FILE=`getTestNames $@`
    echo "dart test $TEST_FILE"
    print -s "dart test $TEST_FILE"
    dart test "$TEST_FILE"
}

function ft {
    TEST_FILE=`getTestNames $@`
    echo "flutter test $TEST_FILE"
    print -s "flutter test $TEST_FILE"
    flutter test "$TEST_FILE"
}
